{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\calender\\\\client\\\\src\\\\Component\\\\Calendar.js\";\nimport React from \"react\";\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { useState } from \"react\";\nimport Attend from \"./Attend\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const [modalOpen, setModalopen] = useState(false);\n  const calendarRef = useRef(null);\n  const onvEventAdded = event => {\n    let calendarapi = calendarRef.current.getApi();\n    calendarapi.addEvent(event);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Attendance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      onCellClick: () => {},\n      plugins: [dayGridPlugin],\n      initialView: \"dayGridMonth\",\n      editable: true,\n      selectable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Attend, {\n      isOpen: modalOpen,\n      onClose: () => setModalopen(false),\n      onvEventAdded: event => onvEventAdded(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"names":["React","FullCalendar","dayGridPlugin","useState","Attend","useRef","jsxDEV","_jsxDEV","modalOpen","setModalopen","calendarRef","onvEventAdded","event","calendarapi","current","getApi","addEvent","children","fileName","_jsxFileName","lineNumber","columnNumber","onCellClick","plugins","initialView","editable","selectable","isOpen","onClose"],"sources":["C:/Users/USER/calender/client/src/Component/Calendar.js"],"sourcesContent":["import React from \"react\";\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport { useState } from \"react\";\r\nimport Attend from \"./Attend\";\r\nimport { useRef } from \"react\";\r\n\r\nexport default function () {\r\n    const [modalOpen, setModalopen] = useState(false);\r\n    const calendarRef = useRef(null);\r\n\r\n    const onvEventAdded=event=>{\r\n        let calendarapi=calendarRef.current.getApi()\r\n        calendarapi.addEvent(event);\r\n    }\r\n    return (\r\n        <section>\r\n            <button>Add Attendance</button>\r\n            <FullCalendar onCellClick={() => { }}\r\n                plugins={[dayGridPlugin]}\r\n                initialView='dayGridMonth'\r\n                editable={true}\r\n                selectable={true}\r\n\r\n            />\r\n            <Attend isOpen={modalOpen} onClose={()=>setModalopen(false)} onvEventAdded={(event)=>onvEventAdded(event)}/>\r\n        </section>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,eAAe,YAAY;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMO,WAAW,GAAGL,MAAM,CAAC,IAAI,CAAC;EAEhC,MAAMM,aAAa,GAACC,KAAK,IAAE;IACvB,IAAIC,WAAW,GAACH,WAAW,CAACI,OAAO,CAACC,MAAM,EAAE;IAC5CF,WAAW,CAACG,QAAQ,CAACJ,KAAK,CAAC;EAC/B,CAAC;EACD,oBACIL,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAAU,QAAA,EAAQ;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC/Bd,OAAA,CAACN,YAAY;MAACqB,WAAW,EAAEA,CAAA,KAAM,CAAE,CAAE;MACjCC,OAAO,EAAE,CAACrB,aAAa,CAAE;MACzBsB,WAAW,EAAC,cAAc;MAC1BC,QAAQ,EAAE,IAAK;MACfC,UAAU,EAAE;IAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEnB,eACFd,OAAA,CAACH,MAAM;MAACuB,MAAM,EAAEnB,SAAU;MAACoB,OAAO,EAAEA,CAAA,KAAInB,YAAY,CAAC,KAAK,CAAE;MAACE,aAAa,EAAGC,KAAK,IAAGD,aAAa,CAACC,KAAK;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACtG;AAElB"},"metadata":{},"sourceType":"module","externalDependencies":[]}